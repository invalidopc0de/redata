apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-config
data:
  node.properties: |
    node.environment=production
    node.id=ffffffff-ffff-ffff-ffff-ffffffffffff
    node.data-dir=/tmp/trino/data

  jvm.config: |
    -server
    -Xmx1G
    -XX:InitialRAMPercentage=80
    -XX:MaxRAMPercentage=80
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+ExitOnOutOfMemoryError
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    -Dfile.encoding=UTF-8
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading

  config.properties: |
    coordinator=true
    node-scheduler.include-coordinator=true
    http-server.http.port=8080
    discovery.uri=http://localhost:8080
    web-ui.enabled=true

  catalog-metadata-db.properties: |
    connector.name=postgresql
    connection-url=jdbc:postgresql://postgres:5432/redata
    connection-user=redata
    connection-password=1gMAfO7Xa49TpYHoqtYH

  catalog-iceberg_s3.properties: |
    connector.name=iceberg
    iceberg.catalog.type=jdbc
    iceberg.jdbc-catalog.driver-class=org.postgresql.Driver
    iceberg.jdbc-catalog.connection-url=jdbc:postgresql://postgres:5432/redata
    iceberg.jdbc-catalog.connection-user=redata
    iceberg.jdbc-catalog.connection-password=1gMAfO7Xa49TpYHoqtYH
    iceberg.jdbc-catalog.default-warehouse-dir=s3a://redata-timeseries-storage/default
    iceberg.jdbc-catalog.catalog-name=redata_time_catalog

    fs.native-s3.enabled=true
    s3.endpoint=http://minio-api:9000
    s3.region=us-east-1
    s3.path-style-access=true
    s3.aws-access-key=xl9pfuASxMm2cKEXkfdD
    s3.aws-secret-key=Ai0R3O569JVT5JOM3cLHBg9T6O4MXyvrCwTTIBhR
---
apiVersion: v1
kind: Service
metadata:
  name: trino
  namespace: redata
spec:
  type: NodePort
  selector:
    app: trino
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trino
  labels:
    app: trino
  namespace: redata
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trino
  template:
    metadata:
      labels:
        app: trino
    spec:
      containers:
        - name: trino
          image: trinodb/trino
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: trino-config
              mountPath: "/etc/trino"
              readOnly: true
      volumes:
        - name: trino-config
          configMap:
            name: trino-config
            items:
              - key: config.properties
                path: config.properties
              - key: node.properties
                path: node.properties
              - key: jvm.config
                path: jvm.config
              - key: catalog-metadata-db.properties
                path: catalog/metadata-db.properties
              - key: catalog-iceberg_s3.properties
                path: catalog/iceberg_s3.properties
